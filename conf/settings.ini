;;;;
; Settings for the network-dog
;;;;
; Dawg needs to know which IP addresses it is supposed to be bound to
; so it can pretend to be a set of one or more GoRouters
; Specify the list here, so that if a request is seen on something different we know there is an issue
;;;;
goRouters = 127.0.0.1,127.0.0.2

;;;;
; GoRouters should be receiving requests for hostnames which are system or app wildcards
; They may also receive requests on their IP for health
; Requests for health on a wildcarded hostname should not have got through
; Specify the list of wildcard domains here
;;;;
globalAppsDomain = *.apps.xyz.com
globalSystemDomain = *.sys.xyz.com
localAppsDomain = *.apps.xyz-local.com
localSystemDomain = *.sys.xyz-local.com

;;;;
; The health endpoint is expected to return a 200 under normal circumstances
; Set this property to get it to return a different value in order to test the load-balancer's reaction
;;;;
unhealthyStatus = 403
; The health endpoint runs on 8080 by default
healthPort = 8080
; and it is called /healthz by default
healthEndpoint = /health
; List of hosts which should return 200
; Requests to an IP not in this list will return the unhealthyStatus set above
healthyHosts = 127.0.0.2

;;;;
; Enable these tests if required
;;;;
enableForwardedFor = false
enableForwardedPort = false